arguments: /home/kushal/Projects/Face-Reco-Flask/lib/src/align/align_dataset_mtcnn.py /home/kushal/Projects/Face-Reco-Flask/lib/data/images/train_raw /home/kushal/Projects/Face-Reco-Flask/lib/data/images/train_aligned --image_size 160
--------------------
git hash: b'dc9452d9bfec4ca0449b95b29eb322bd5ecd4d2a'
--------------------
b'diff --git a/cropped.png b/cropped.png\nindex b30fa16..3bda8c0 100644\nBinary files a/cropped.png and b/cropped.png differ\ndiff --git a/demo.sh b/demo.sh\nindex c92f1bf..b5bb2c1 100755\n--- a/demo.sh\n+++ b/demo.sh\n@@ -6,11 +6,9 @@\n # rm -rf ~/Projects/FACE_RECOGNITION/data/images/train_aligned\n # #\n # python ~/Projects/Face_Recognition/lib/src/align/align_dataset_mtcnn.py ~/Projects/Face_Recognition/data/train_raw ~/Projects/Face_Recognition/data/images/train_aligned --image_size 160\n-export PYTHONPATH=~/Projects/Face_Recognition\n-#\n-python lib/src/create_face_embeddings.py\n-#\n-python server/rest-server.py\n+export PYTHONPATH=~/Projects/Face-Reco-Flask/lib/src\n+\n+python ~/Projects/Face-Reco-Flask/lib/src/align/align_dataset_mtcnn.py ~/Projects/Face-Reco-Flask/lib/data/images/train_raw ~/Projects/Face-Reco-Flask/lib/data/images/train_aligned --image_size 160\n # # remove existing testing alignment\n # rm -rf ~/Projects/facenet/data/images/test_aligned\n #\ndiff --git a/extracted_dict.pickle b/extracted_dict.pickle\nindex 8d064a3..40fa5e3 100644\nBinary files a/extracted_dict.pickle and b/extracted_dict.pickle differ\ndiff --git a/lib/__pycache__/__init__.cpython-36.pyc b/lib/__pycache__/__init__.cpython-36.pyc\nindex b6093fa..0daaede 100644\nBinary files a/lib/__pycache__/__init__.cpython-36.pyc and b/lib/__pycache__/__init__.cpython-36.pyc differ\ndiff --git a/lib/data/images/train_aligned/Aashish/Aashish1_0.png b/lib/data/images/train_aligned/Aashish/Aashish1_0.png\ndeleted file mode 100644\nindex 8200d52..0000000\nBinary files a/lib/data/images/train_aligned/Aashish/Aashish1_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Aashish/Aashish2_0.png b/lib/data/images/train_aligned/Aashish/Aashish2_0.png\ndeleted file mode 100644\nindex cf7fee0..0000000\nBinary files a/lib/data/images/train_aligned/Aashish/Aashish2_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Aashish/Aashish3_0.png b/lib/data/images/train_aligned/Aashish/Aashish3_0.png\ndeleted file mode 100644\nindex af9a67f..0000000\nBinary files a/lib/data/images/train_aligned/Aashish/Aashish3_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Aashish/Aashish4_0.png b/lib/data/images/train_aligned/Aashish/Aashish4_0.png\ndeleted file mode 100644\nindex b57aaa9..0000000\nBinary files a/lib/data/images/train_aligned/Aashish/Aashish4_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Aashish/Aashish5_0.png b/lib/data/images/train_aligned/Aashish/Aashish5_0.png\ndeleted file mode 100644\nindex 43e0e31..0000000\nBinary files a/lib/data/images/train_aligned/Aashish/Aashish5_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Aashish/Aashish6_0.png b/lib/data/images/train_aligned/Aashish/Aashish6_0.png\ndeleted file mode 100644\nindex e8fc904..0000000\nBinary files a/lib/data/images/train_aligned/Aashish/Aashish6_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Aashish/Aashish7_0.png b/lib/data/images/train_aligned/Aashish/Aashish7_0.png\ndeleted file mode 100644\nindex 00d27da..0000000\nBinary files a/lib/data/images/train_aligned/Aashish/Aashish7_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Akansha/Akansha1_0.png b/lib/data/images/train_aligned/Akansha/Akansha1_0.png\ndeleted file mode 100644\nindex 83a5304..0000000\nBinary files a/lib/data/images/train_aligned/Akansha/Akansha1_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Akansha/Akansha2_0.png b/lib/data/images/train_aligned/Akansha/Akansha2_0.png\ndeleted file mode 100644\nindex fbd5111..0000000\nBinary files a/lib/data/images/train_aligned/Akansha/Akansha2_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Akansha/Akansha3_0.png b/lib/data/images/train_aligned/Akansha/Akansha3_0.png\ndeleted file mode 100644\nindex ebf7ec0..0000000\nBinary files a/lib/data/images/train_aligned/Akansha/Akansha3_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Akansha/Akansha4_0.png b/lib/data/images/train_aligned/Akansha/Akansha4_0.png\ndeleted file mode 100644\nindex e107d95..0000000\nBinary files a/lib/data/images/train_aligned/Akansha/Akansha4_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Atul/Atul-1_0.png b/lib/data/images/train_aligned/Atul/Atul-1_0.png\ndeleted file mode 100644\nindex df66979..0000000\nBinary files a/lib/data/images/train_aligned/Atul/Atul-1_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Atul/Atul-2_0.png b/lib/data/images/train_aligned/Atul/Atul-2_0.png\ndeleted file mode 100644\nindex 09b9c88..0000000\nBinary files a/lib/data/images/train_aligned/Atul/Atul-2_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Atul/Atul-3_0.png b/lib/data/images/train_aligned/Atul/Atul-3_0.png\ndeleted file mode 100644\nindex da69611..0000000\nBinary files a/lib/data/images/train_aligned/Atul/Atul-3_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Atul/Atul-4_0.png b/lib/data/images/train_aligned/Atul/Atul-4_0.png\ndeleted file mode 100644\nindex dba34a3..0000000\nBinary files a/lib/data/images/train_aligned/Atul/Atul-4_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Gaurav/Gaurav-01_0.png b/lib/data/images/train_aligned/Gaurav/Gaurav-01_0.png\ndeleted file mode 100644\nindex 6864a74..0000000\nBinary files a/lib/data/images/train_aligned/Gaurav/Gaurav-01_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Gaurav/Gaurav-02_0.png b/lib/data/images/train_aligned/Gaurav/Gaurav-02_0.png\ndeleted file mode 100644\nindex fb4eb8d..0000000\nBinary files a/lib/data/images/train_aligned/Gaurav/Gaurav-02_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Gaurav/Gaurav-03_0.png b/lib/data/images/train_aligned/Gaurav/Gaurav-03_0.png\ndeleted file mode 100644\nindex 499fa73..0000000\nBinary files a/lib/data/images/train_aligned/Gaurav/Gaurav-03_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Gaurav/Gaurav-04_0.png b/lib/data/images/train_aligned/Gaurav/Gaurav-04_0.png\ndeleted file mode 100644\nindex a381fde..0000000\nBinary files a/lib/data/images/train_aligned/Gaurav/Gaurav-04_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Gaurav/Gaurav-05_0.png b/lib/data/images/train_aligned/Gaurav/Gaurav-05_0.png\ndeleted file mode 100644\nindex 7d0f8eb..0000000\nBinary files a/lib/data/images/train_aligned/Gaurav/Gaurav-05_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Gaurav/Gaurav-06_0.png b/lib/data/images/train_aligned/Gaurav/Gaurav-06_0.png\ndeleted file mode 100644\nindex 8ab0d66..0000000\nBinary files a/lib/data/images/train_aligned/Gaurav/Gaurav-06_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Kapil/kapil1_0.png b/lib/data/images/train_aligned/Kapil/kapil1_0.png\ndeleted file mode 100644\nindex 15a9118..0000000\nBinary files a/lib/data/images/train_aligned/Kapil/kapil1_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Kapil/kapil2_0.png b/lib/data/images/train_aligned/Kapil/kapil2_0.png\ndeleted file mode 100644\nindex cbb1448..0000000\nBinary files a/lib/data/images/train_aligned/Kapil/kapil2_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Kapil/kapil3_0.png b/lib/data/images/train_aligned/Kapil/kapil3_0.png\ndeleted file mode 100644\nindex 7efcdd4..0000000\nBinary files a/lib/data/images/train_aligned/Kapil/kapil3_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Kapil/kapil4_0.png b/lib/data/images/train_aligned/Kapil/kapil4_0.png\ndeleted file mode 100644\nindex 03b036e..0000000\nBinary files a/lib/data/images/train_aligned/Kapil/kapil4_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Kapil/kapil5_0.png b/lib/data/images/train_aligned/Kapil/kapil5_0.png\ndeleted file mode 100644\nindex 82e9669..0000000\nBinary files a/lib/data/images/train_aligned/Kapil/kapil5_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Kapil/kapil6_0.png b/lib/data/images/train_aligned/Kapil/kapil6_0.png\ndeleted file mode 100644\nindex 42ea49f..0000000\nBinary files a/lib/data/images/train_aligned/Kapil/kapil6_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Kushal/Kushal-0120_0.png b/lib/data/images/train_aligned/Kushal/Kushal-0120_0.png\ndeleted file mode 100644\nindex 419aa4d..0000000\nBinary files a/lib/data/images/train_aligned/Kushal/Kushal-0120_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Kushal/Kushal-012_0.png b/lib/data/images/train_aligned/Kushal/Kushal-012_0.png\ndeleted file mode 100644\nindex 419aa4d..0000000\nBinary files a/lib/data/images/train_aligned/Kushal/Kushal-012_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Kushal/Kushal-013_0.png b/lib/data/images/train_aligned/Kushal/Kushal-013_0.png\ndeleted file mode 100644\nindex 75f1518..0000000\nBinary files a/lib/data/images/train_aligned/Kushal/Kushal-013_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Kushal/Kushal-014_0.png b/lib/data/images/train_aligned/Kushal/Kushal-014_0.png\ndeleted file mode 100644\nindex f2bc353..0000000\nBinary files a/lib/data/images/train_aligned/Kushal/Kushal-014_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Kushal/Kushal-015_0.png b/lib/data/images/train_aligned/Kushal/Kushal-015_0.png\ndeleted file mode 100644\nindex cd3f299..0000000\nBinary files a/lib/data/images/train_aligned/Kushal/Kushal-015_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Manish/Manish11_0.png b/lib/data/images/train_aligned/Manish/Manish11_0.png\ndeleted file mode 100644\nindex c9452bf..0000000\nBinary files a/lib/data/images/train_aligned/Manish/Manish11_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Manish/Manish22_0.png b/lib/data/images/train_aligned/Manish/Manish22_0.png\ndeleted file mode 100644\nindex e0072f3..0000000\nBinary files a/lib/data/images/train_aligned/Manish/Manish22_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Manish/manish_new3_0.png b/lib/data/images/train_aligned/Manish/manish_new3_0.png\ndeleted file mode 100644\nindex c62f782..0000000\nBinary files a/lib/data/images/train_aligned/Manish/manish_new3_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Mayank/Mayank1_0.png b/lib/data/images/train_aligned/Mayank/Mayank1_0.png\ndeleted file mode 100644\nindex f1bb0ee..0000000\nBinary files a/lib/data/images/train_aligned/Mayank/Mayank1_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Mayank/Mayank2_0.png b/lib/data/images/train_aligned/Mayank/Mayank2_0.png\ndeleted file mode 100644\nindex e7a7857..0000000\nBinary files a/lib/data/images/train_aligned/Mayank/Mayank2_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Mayank/Mayank3_0.png b/lib/data/images/train_aligned/Mayank/Mayank3_0.png\ndeleted file mode 100644\nindex 4a078ba..0000000\nBinary files a/lib/data/images/train_aligned/Mayank/Mayank3_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Mayank/Mayank4_0.png b/lib/data/images/train_aligned/Mayank/Mayank4_0.png\ndeleted file mode 100644\nindex 4185e7f..0000000\nBinary files a/lib/data/images/train_aligned/Mayank/Mayank4_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Mayank/Mayank5_0.png b/lib/data/images/train_aligned/Mayank/Mayank5_0.png\ndeleted file mode 100644\nindex a70fa49..0000000\nBinary files a/lib/data/images/train_aligned/Mayank/Mayank5_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Mayank/Mayank6_0.png b/lib/data/images/train_aligned/Mayank/Mayank6_0.png\ndeleted file mode 100644\nindex f23c6da..0000000\nBinary files a/lib/data/images/train_aligned/Mayank/Mayank6_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Rakesh/Rakesh1_0.png b/lib/data/images/train_aligned/Rakesh/Rakesh1_0.png\ndeleted file mode 100644\nindex 8296e3c..0000000\nBinary files a/lib/data/images/train_aligned/Rakesh/Rakesh1_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Rakesh/Rakesh2_0.png b/lib/data/images/train_aligned/Rakesh/Rakesh2_0.png\ndeleted file mode 100644\nindex 8296e3c..0000000\nBinary files a/lib/data/images/train_aligned/Rakesh/Rakesh2_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Rakesh/Rakesh3_0.png b/lib/data/images/train_aligned/Rakesh/Rakesh3_0.png\ndeleted file mode 100644\nindex 8296e3c..0000000\nBinary files a/lib/data/images/train_aligned/Rakesh/Rakesh3_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Rakesh/Rakesh4_0.png b/lib/data/images/train_aligned/Rakesh/Rakesh4_0.png\ndeleted file mode 100644\nindex 7fe1204..0000000\nBinary files a/lib/data/images/train_aligned/Rakesh/Rakesh4_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Rakesh/Rakesh5_0.png b/lib/data/images/train_aligned/Rakesh/Rakesh5_0.png\ndeleted file mode 100644\nindex 7fe1204..0000000\nBinary files a/lib/data/images/train_aligned/Rakesh/Rakesh5_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Sachin/Sachin1_0.png b/lib/data/images/train_aligned/Sachin/Sachin1_0.png\ndeleted file mode 100644\nindex 60484d8..0000000\nBinary files a/lib/data/images/train_aligned/Sachin/Sachin1_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Sachin/Sachin2_0.png b/lib/data/images/train_aligned/Sachin/Sachin2_0.png\ndeleted file mode 100644\nindex 8a66221..0000000\nBinary files a/lib/data/images/train_aligned/Sachin/Sachin2_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Sachin/Sachin3_0.png b/lib/data/images/train_aligned/Sachin/Sachin3_0.png\ndeleted file mode 100644\nindex 13f0a77..0000000\nBinary files a/lib/data/images/train_aligned/Sachin/Sachin3_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Shivangi/shivangi1_0.png b/lib/data/images/train_aligned/Shivangi/shivangi1_0.png\ndeleted file mode 100644\nindex 9dbba8a..0000000\nBinary files a/lib/data/images/train_aligned/Shivangi/shivangi1_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Shivangi/shivangi2_0.png b/lib/data/images/train_aligned/Shivangi/shivangi2_0.png\ndeleted file mode 100644\nindex 8a4569e..0000000\nBinary files a/lib/data/images/train_aligned/Shivangi/shivangi2_0.png and /dev/null differ\ndiff --git a/lib/data/images/train_aligned/Shivangi/shivangi3_0.png b/lib/data/images/train_aligned/Shivangi/shivangi3_0.png\ndeleted file mode 100644\nindex 9af819f..0000000\nBinary files a/lib/data/images/train_aligned/Shivangi/shivangi3_0.png and /dev/null differ\ndiff --git a/lib/src/__pycache__/__init__.cpython-36.pyc b/lib/src/__pycache__/__init__.cpython-36.pyc\nindex 5c3d66f..1dece11 100644\nBinary files a/lib/src/__pycache__/__init__.cpython-36.pyc and b/lib/src/__pycache__/__init__.cpython-36.pyc differ\ndiff --git a/lib/src/__pycache__/facenet.cpython-36.pyc b/lib/src/__pycache__/facenet.cpython-36.pyc\nindex 5646638..cac64ff 100644\nBinary files a/lib/src/__pycache__/facenet.cpython-36.pyc and b/lib/src/__pycache__/facenet.cpython-36.pyc differ\ndiff --git a/lib/src/__pycache__/lfw.cpython-36.pyc b/lib/src/__pycache__/lfw.cpython-36.pyc\nindex 7292aca..2419fc2 100644\nBinary files a/lib/src/__pycache__/lfw.cpython-36.pyc and b/lib/src/__pycache__/lfw.cpython-36.pyc differ\ndiff --git a/lib/src/__pycache__/retrieve.cpython-36.pyc b/lib/src/__pycache__/retrieve.cpython-36.pyc\nindex 2425e41..b98f8fd 100644\nBinary files a/lib/src/__pycache__/retrieve.cpython-36.pyc and b/lib/src/__pycache__/retrieve.cpython-36.pyc differ\ndiff --git a/lib/src/align/__pycache__/__init__.cpython-36.pyc b/lib/src/align/__pycache__/__init__.cpython-36.pyc\nindex 1c6f8d3..b4c774e 100644\nBinary files a/lib/src/align/__pycache__/__init__.cpython-36.pyc and b/lib/src/align/__pycache__/__init__.cpython-36.pyc differ\ndiff --git a/lib/src/align/__pycache__/detect_face.cpython-36.pyc b/lib/src/align/__pycache__/detect_face.cpython-36.pyc\nindex aecaf98..20f1163 100644\nBinary files a/lib/src/align/__pycache__/detect_face.cpython-36.pyc and b/lib/src/align/__pycache__/detect_face.cpython-36.pyc differ\ndiff --git a/lib/src/align/align_dataset_mtcnn.py b/lib/src/align/align_dataset_mtcnn.py\nindex 60df9ed..1e89652 100644\n--- a/lib/src/align/align_dataset_mtcnn.py\n+++ b/lib/src/align/align_dataset_mtcnn.py\n@@ -31,8 +31,8 @@ import os\n import argparse\n import tensorflow as tf\n import numpy as np\n-import facenet\n-import align.detect_face\n+import  facenet\n+import detect_face\n import random\n from time import sleep\n \n@@ -46,13 +46,17 @@ def main(args):\n     facenet.store_revision_info(src_path, output_dir, \' \'.join(sys.argv))\n     dataset = facenet.get_dataset(args.input_dir)\n \n+    aligned_user_names = []\n+    for f in os.listdir(output_dir):\n+        aligned_user_names.append(f)\n+    print("Directory================", str(aligned_user_names))\n     print(\'Creating networks and loading parameters\')\n \n     with tf.Graph().as_default():\n         gpu_options = tf.GPUOptions(per_process_gpu_memory_fraction=args.gpu_memory_fraction)\n         sess = tf.Session(config=tf.ConfigProto(gpu_options=gpu_options, log_device_placement=False))\n         with sess.as_default():\n-            pnet, rnet, onet = align.detect_face.create_mtcnn(sess, None)\n+            pnet, rnet, onet = detect_face.create_mtcnn(sess, None)\n \n     minsize = 50 # minimum size of face\n     threshold = [ 0.6, 0.7, 0.7 ]  # three steps\'s threshold\n@@ -67,69 +71,71 @@ def main(args):\n         nrof_successfully_aligned = 0\n         if args.random_order:\n             random.shuffle(dataset)\n+\n         for cls in dataset:\n-            print("cls.name",cls.name)\n-            output_class_dir = os.path.join(output_dir, cls.name)\n-            if not os.path.exists(output_class_dir):\n-                os.makedirs(output_class_dir)\n-                if args.random_order:\n-                    random.shuffle(cls.image_paths)\n-            for image_path in cls.image_paths:\n-                nrof_images_total += 1\n-                filename = os.path.splitext(os.path.split(image_path)[1])[0]\n-                output_filename = os.path.join(output_class_dir, filename+\'.png\')\n-                print(image_path)\n-                if not os.path.exists(output_filename):\n-                    try:\n-                        img = misc.imread(image_path)\n-                    except (IOError, ValueError, IndexError) as e:\n-                        errorMessage = \'{}: {}\'.format(image_path, e)\n-                        print(errorMessage)\n-                    else:\n-                        if img.ndim<2:\n-                            print(\'Unable to align "%s"\' % image_path)\n-                            text_file.write(\'%s\\n\' % (output_filename))\n-                            continue\n-                        if img.ndim == 2:\n-                            img = facenet.to_rgb(img)\n-                        img = img[:,:,0:3]\n-\n-                        bounding_boxes, _ = align.detect_face.detect_face(img, minsize, pnet, rnet, onet, threshold, factor)\n-                        nrof_faces = bounding_boxes.shape[0]\n-                        if nrof_faces>0:\n-                            det = bounding_boxes[:,0:4]\n-                            det_arr = []\n-                            img_size = np.asarray(img.shape)[0:2]\n-                            if nrof_faces>1:\n-                                if args.detect_multiple_faces:\n-                                    for i in range(nrof_faces):\n-                                        det_arr.append(np.squeeze(det[i]))\n+            if cls.name not in aligned_user_names:\n+                print("cls.name",cls.name)\n+                output_class_dir = os.path.join(output_dir, cls.name)\n+                if not os.path.exists(output_class_dir):\n+                    os.makedirs(output_class_dir)\n+                    if args.random_order:\n+                        random.shuffle(cls.image_paths)\n+                for image_path in cls.image_paths:\n+                    nrof_images_total += 1\n+                    filename = os.path.splitext(os.path.split(image_path)[1])[0]\n+                    output_filename = os.path.join(output_class_dir, filename+\'.png\')\n+                    print(image_path)\n+                    if not os.path.exists(output_filename):\n+                        try:\n+                            img = misc.imread(image_path)\n+                        except (IOError, ValueError, IndexError) as e:\n+                            errorMessage = \'{}: {}\'.format(image_path, e)\n+                            print(errorMessage)\n+                        else:\n+                            if img.ndim<2:\n+                                print(\'Unable to align "%s"\' % image_path)\n+                                text_file.write(\'%s\\n\' % (output_filename))\n+                                continue\n+                            if img.ndim == 2:\n+                                img = facenet.to_rgb(img)\n+                            img = img[:,:,0:3]\n+\n+                            bounding_boxes, _ = detect_face.detect_face(img, minsize, pnet, rnet, onet, threshold, factor)\n+                            nrof_faces = bounding_boxes.shape[0]\n+                            if nrof_faces>0:\n+                                det = bounding_boxes[:,0:4]\n+                                det_arr = []\n+                                img_size = np.asarray(img.shape)[0:2]\n+                                if nrof_faces>1:\n+                                    if args.detect_multiple_faces:\n+                                        for i in range(nrof_faces):\n+                                            det_arr.append(np.squeeze(det[i]))\n+                                    else:\n+                                        bounding_box_size = (det[:,2]-det[:,0])*(det[:,3]-det[:,1])\n+                                        img_center = img_size / 2\n+                                        offsets = np.vstack([ (det[:,0]+det[:,2])/2-img_center[1], (det[:,1]+det[:,3])/2-img_center[0] ])\n+                                        offset_dist_squared = np.sum(np.power(offsets,2.0),0)\n+                                        index = np.argmax(bounding_box_size-offset_dist_squared*2.0) # some extra weight on the centering\n+                                        det_arr.append(det[index,:])\n                                 else:\n-                                    bounding_box_size = (det[:,2]-det[:,0])*(det[:,3]-det[:,1])\n-                                    img_center = img_size / 2\n-                                    offsets = np.vstack([ (det[:,0]+det[:,2])/2-img_center[1], (det[:,1]+det[:,3])/2-img_center[0] ])\n-                                    offset_dist_squared = np.sum(np.power(offsets,2.0),0)\n-                                    index = np.argmax(bounding_box_size-offset_dist_squared*2.0) # some extra weight on the centering\n-                                    det_arr.append(det[index,:])\n+                                    det_arr.append(np.squeeze(det))\n+\n+                                for i, det in enumerate(det_arr):\n+                                    det = np.squeeze(det)\n+                                    bb = np.zeros(4, dtype=np.int32)\n+                                    bb[0] = np.maximum(det[0]-args.margin/2, 0)\n+                                    bb[1] = np.maximum(det[1]-args.margin/2, 0)\n+                                    bb[2] = np.minimum(det[2]+args.margin/2, img_size[1])\n+                                    bb[3] = np.minimum(det[3]+args.margin/2, img_size[0])\n+                                    cropped = img[bb[1]:bb[3],bb[0]:bb[2],:]\n+                                    scaled = misc.imresize(cropped, (args.image_size, args.image_size), interp=\'bilinear\')\n+                                    nrof_successfully_aligned += 1\n+                                    output_filename_n = "{}_{}.{}".format(output_filename.split(\'.\')[0], i, output_filename.split(\'.\')[-1])\n+                                    misc.imsave(output_filename_n, scaled)\n+                                    text_file.write(\'%s %d %d %d %d\\n\' % (output_filename_n, bb[0], bb[1], bb[2], bb[3]))\n                             else:\n-                                det_arr.append(np.squeeze(det))\n-\n-                            for i, det in enumerate(det_arr):\n-                                det = np.squeeze(det)\n-                                bb = np.zeros(4, dtype=np.int32)\n-                                bb[0] = np.maximum(det[0]-args.margin/2, 0)\n-                                bb[1] = np.maximum(det[1]-args.margin/2, 0)\n-                                bb[2] = np.minimum(det[2]+args.margin/2, img_size[1])\n-                                bb[3] = np.minimum(det[3]+args.margin/2, img_size[0])\n-                                cropped = img[bb[1]:bb[3],bb[0]:bb[2],:]\n-                                scaled = misc.imresize(cropped, (args.image_size, args.image_size), interp=\'bilinear\')\n-                                nrof_successfully_aligned += 1\n-                                output_filename_n = "{}_{}.{}".format(output_filename.split(\'.\')[0], i, output_filename.split(\'.\')[-1])\n-                                misc.imsave(output_filename_n, scaled)\n-                                text_file.write(\'%s %d %d %d %d\\n\' % (output_filename_n, bb[0], bb[1], bb[2], bb[3]))\n-                        else:\n-                            print(\'Unable to align "%s"\' % image_path)\n-                            text_file.write(\'%s\\n\' % (output_filename))\n+                                print(\'Unable to align "%s"\' % image_path)\n+                                text_file.write(\'%s\\n\' % (output_filename))\n \n     print(\'Total number of images: %d\' % nrof_images_total)\n     print(\'Number of successfully aligned images: %d\' % nrof_successfully_aligned)\ndiff --git a/lib/src/create_face_embeddings.py b/lib/src/create_face_embeddings.py\nindex 13f476a..9e75eed 100644\n--- a/lib/src/create_face_embeddings.py\n+++ b/lib/src/create_face_embeddings.py\n@@ -47,20 +47,13 @@ def main(args):\n \n             # Get the paths for the corresponding images\n             ROOT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n+            paths = []\n+            for user_dir in os.listdir(ROOT_DIR + \'/data/images/train_aligned/\'):\n+                print("data===============", str(user_dir[len(user_dir) - 3:]))\n+                if user_dir[len(user_dir) - 3:] != "txt":\n+                    user_images =  [ROOT_DIR + \'/data/images/train_aligned/\'+str(user_dir)+\'/\' + f for f in os.listdir(ROOT_DIR + \'/data/images/train_aligned/\'+str(user_dir)+\'/\')]\n+                    paths = paths + user_images\n \n-            kushal =  [ROOT_DIR + \'/data/images/train_aligned/Kushal/\' + f for f in os.listdir(ROOT_DIR + \'/data/images/train_aligned/Kushal/\')]\n-            gaurav =  [ROOT_DIR + \'/data/images/train_aligned/Gaurav/\' + f for f in os.listdir(ROOT_DIR + \'/data/images/train_aligned/Gaurav/\')]\n-            akansha =  [ROOT_DIR + \'/data/images/train_aligned/Akansha/\' + f for f in os.listdir(ROOT_DIR + \'/data/images/train_aligned/Akansha/\')]\n-            shivangi =  [ROOT_DIR + \'/data/images/train_aligned/Shivangi/\' + f for f in os.listdir(ROOT_DIR + \'/data/images/train_aligned/Shivangi/\')]\n-            sachin =  [ROOT_DIR + \'/data/images/train_aligned/Sachin/\' + f for f in os.listdir(ROOT_DIR + \'/data/images/train_aligned/Sachin/\')]\n-            manish =  [ROOT_DIR + \'/data/images/train_aligned/Manish/\' + f for f in os.listdir(ROOT_DIR + \'/data/images/train_aligned/Manish/\')]\n-            atul =  [ROOT_DIR + \'/data/images/train_aligned/Atul/\' + f for f in os.listdir(ROOT_DIR + \'/data/images/train_aligned/Atul/\')]\n-            kapil =  [ROOT_DIR + \'/data/images/train_aligned/Kapil/\' + f for f in os.listdir(ROOT_DIR + \'/data/images/train_aligned/Kapil/\')]\n-            rakesh =  [ROOT_DIR + \'/data/images/train_aligned/Rakesh/\' + f for f in os.listdir(ROOT_DIR + \'/data/images/train_aligned/Rakesh/\')]\n-            mayank =  [ROOT_DIR + \'/data/images/train_aligned/Mayank/\' + f for f in os.listdir(ROOT_DIR + \'/data/images/train_aligned/Mayank/\')]\n-            aashish =  [ROOT_DIR + \'/data/images/train_aligned/Aashish/\' + f for f in os.listdir(ROOT_DIR + \'/data/images/train_aligned/Aashish/\')]\n-\n-            paths = kushal+gaurav+akansha+ shivangi+sachin+manish+atul+mayank+rakesh+kapil+aashish\n             #np.save("images.npy",paths)\n             # Load the model\n             facenet.load_model(args.model)\n@@ -95,7 +88,7 @@ def parse_arguments(argv):\n \n     parser.add_argument(\'--lfw_batch_size\', type=int,\n         help=\'Number of images to process in a batch in the LFW test set.\', default=100)\n-    parser.add_argument(\'--model\', type=str,default=\'/home/kushal/Projects/Face_Recognition/models\',\n+    parser.add_argument(\'--model\', type=str,default=\'/home/kushal/Projects/Face-Reco-Flask/models\',\n         help=\'Could be either a directory containing the meta_file and ckpt_file or a model protobuf (.pb) file\')\n     parser.add_argument(\'--image_size\', type=int,\n         help=\'Image size (height, width) in pixels.\', default=160)\ndiff --git a/lib/src/facenet.py b/lib/src/facenet.py\nindex e4bd626..e6b90a2 100644\n--- a/lib/src/facenet.py\n+++ b/lib/src/facenet.py\n@@ -421,7 +421,6 @@ def load_model(model):\n         saver.restore(tf.get_default_session(), os.path.join(model_exp, ckpt_file))\n \n def get_model_filenames(model_dir):\n-    print("Balle Balle ==============", model_dir)\n     files = os.listdir(model_dir)\n     meta_files = [s for s in files if s.endswith(\'.meta\')]\n     if len(meta_files)==0:\ndiff --git a/lib/src/retrieve.py b/lib/src/retrieve.py\nindex 8e79172..28b859d 100644\n--- a/lib/src/retrieve.py\n+++ b/lib/src/retrieve.py\n@@ -27,7 +27,7 @@ from __future__ import print_function\n import tensorflow as tf\n import numpy as np\n import argparse\n-from src.facenet import load_data,load_img,load_model,to_rgb\n+from lib.src.facenet import load_data,load_img,load_model,to_rgb\n #import lfw\n import os\n import sys\n@@ -174,7 +174,7 @@ def recognize_face(sess,pnet, rnet, onet,feature_array, web_img):\n                                 feature_vector = sess.run(embeddings, feed_dict=feed_dict)\n                                 result, accuracy = identify_person(feature_vector, feature_array,8)\n                                 print(accuracy)\n-                                print("Balleeee===========", result)\n+                                print("Result=============", str(result))\n                                 if accuracy < 9:\n                                     name = result.split("/")\n                                     name = name[len(name) - 2]\n@@ -206,7 +206,7 @@ def recognize_face(sess,pnet, rnet, onet,feature_array, web_img):\n                                 feature_vector = sess.run(embeddings, feed_dict=feed_dict)\n                                 result, accuracy = identify_person(feature_vector, feature_array,8)\n                                 print(accuracy)\n-                                print("Balleeee===========", result)\n+\n                                 if accuracy < 9:\n                                     name = result.split("/")\n                                     name = name[len(name) - 2]\ndiff --git a/models/20180402-114759.zip b/models/20180402-114759.zip\ndeleted file mode 100644\nindex 1f6af69..0000000\nBinary files a/models/20180402-114759.zip and /dev/null differ\ndiff --git a/models/model-20180402-114759.ckpt-275.7z b/models/model-20180402-114759.ckpt-275.7z\ndeleted file mode 100644\nindex 797c5fe..0000000\nBinary files a/models/model-20180402-114759.ckpt-275.7z and /dev/null differ\ndiff --git a/models/model-20180402-114759.ckpt-275.tar.xz b/models/model-20180402-114759.ckpt-275.tar.xz\ndeleted file mode 100644\nindex 3c894ea..0000000\nBinary files a/models/model-20180402-114759.ckpt-275.tar.xz and /dev/null differ\ndiff --git a/models/model-20180402-114759.ckpt-275.zip b/models/model-20180402-114759.ckpt-275.zip\ndeleted file mode 100644\nindex 9d96050..0000000\nBinary files a/models/model-20180402-114759.ckpt-275.zip and /dev/null differ\ndiff --git a/models/model-20180402-114759.zip b/models/model-20180402-114759.zip\ndeleted file mode 100644\nindex e498cf6..0000000\nBinary files a/models/model-20180402-114759.zip and /dev/null differ\ndiff --git a/server/rest-server.py b/server/rest-server.py\nindex 37977ad..72e16aa 100644\n--- a/server/rest-server.py\n+++ b/server/rest-server.py\n@@ -15,13 +15,16 @@ from tensorflow.python.platform import gfile\n from six import iteritems\n sys.path.append(\'..\')\n import numpy as np\n-from src import retrieve\n-from src.align import detect_face\n+from lib.src import retrieve\n+from lib.src.align import detect_face\n import tensorflow as tf\n import pickle\n from tensorflow.python.platform import gfile\n from base64 import b64decode\n from flask_cors import CORS\n+import json, re\n+from flask_request_params import bind_request_params\n+import subprocess\n \n app = Flask(__name__, static_url_path = "")\n CORS(app)\n@@ -58,11 +61,55 @@ def face_det():\n \n @app.route(\'/facerecognition\', methods=[\'GET\', \'POST\'])\n def face():\n-\tprint("Hiitttttttttttttttttt")\n-\theader, encoded = request.form["file"].split(",", 1)\n-\tdata = b64decode(encoded)\n-\twith open("webcameimg.png", "wb") as f:\n-\t\tf.write(data)\n+        header, encoded = request.form["file"].split(",", 1)\n+        data = b64decode(encoded)\n+\n+        with open("webcameimg.png", "wb") as f:\n+                f.write(data)\n+\n+        name = retrieve.recognize_face(sess_fr,pnet, rnet, onet,feature_array, True)\n+        result = { \'name\': name }\n+        response = app.response_class(\n+                response=json.dumps(result),\n+                status=200,\n+                mimetype=\'application/json\'\n+        )\n+\n+        return response;\n+\n+\n+\n+@app.route(\'/align_images\', methods=[\'GET\', \'POST\'])\n+def alignImages():\n+\tfile1 = request.form["file1"]\n+\tfile2 = request.form["file2"]\n+\tfile3 = request.form["file3"]\n+\tfile4 = request.form["file4"]\n+\tuserName = request.form["userName"]\n+\n+\tpath = os.path.join(ROOT_DIR+"/lib/data/images/train_raw", userName)\n+\tprint("Path====================", str(path))\n+\tif os.path.isdir(path) == False:\n+\t\tos.mkdir(path)\n+\n+\tfor i in range(1, 5):\n+\t\tif i == 1:\n+\t\t\theader, encoded = file1.split(",", 1)\n+\t\telif i == 2:\n+\t\t\theader, encoded = file2.split(",", 1)\n+\t\telif i == 3:\n+\t\t\theader, encoded = file3.split(",", 1)\n+\t\telif i == 4:\n+\t\t\theader, encoded = file4.split(",", 1)\n+\n+\t\tdata = b64decode(encoded)\n+\n+\t\twith open(ROOT_DIR+"/lib/data/images/train_raw/"+userName+"/"+userName+""+str(i)+".png", "wb") as f:\n+\t\t\tf.write(data)\n+\tsubprocess.call([\'sh\', \'/home/kushal/Projects/Face-Reco-Flask/align_images.sh\'])\n+\twith open(ROOT_DIR + \'/extracted_dict.pickle\',\'rb\') as f:\n+\t\tglobal feature_array\n+\t\tfeature_array = pickle.load(f)\n \tname = retrieve.recognize_face(sess_fr,pnet, rnet, onet,feature_array, True)\n \tprint("Name===============", name)\n \tresult = { \'name\': name }\n@@ -74,6 +121,20 @@ def face():\n \n \treturn response;\n \n+@app.route(\'/create_embeddings\', methods=[\'GET\', \'POST\'])\n+def createEmbeddings():\n+\tsubprocess.call([\'sh\', \'/home/kushal/Projects/Face-Reco-Flask/demo.sh\'])\n+\n+\tresult = { \'message\': "Embeddings Created Successfully" }\n+\tresponse = app.response_class(\n+\t\tresponse=json.dumps(result),\n+\t\tstatus=200,\n+\t\tmimetype=\'application/json\'\n+\t)\n+\n+\treturn response;\n+\n+\n #==============================================================================================================================\n #\n #                                           Main function                                                        \t            #\ndiff --git a/webcameimg.png b/webcameimg.png\nindex 056092d..ebdc75f 100644\nBinary files a/webcameimg.png and b/webcameimg.png differ'